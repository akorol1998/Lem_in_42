
void		add_to_queue(t_table *tbl, t_node *node)
{
	t_pipe	*pip;
	int		i;
	int		flag;
	int		idx;

	idx = -1;
	pip = node->branch;
	while (tbl->q[++idx])
		;
	while (pip)
	{
		i = -1;
		flag = 1;
		while (tbl->q[++i])
		{
			if (!ft_strcmp(tbl->q[i]->name, pip->node->name))
				flag = 0;
		}
		if (flag)
		{
			tbl->q[idx] = pip->node;
			pip->node->prev = node;
			idx++;
		}
		pip = pip->next;
	}
}

void		extract_path(t_table *tbl)
{
	int		i;
	int		j;

	i = -1;
	while (tbl->q[++i])
		;
	j = -1;
	while (tbl->path[++j])
		;
	tbl->path[j] = (int*)malloc(sizeof(int) * i);
	printf("%d\n", i);
	printf("%d\n", j);
	printf("Extracting path");
}

int			set_levels(t_table *tbl)
{
	t_node	*cur;
	int		idx;

	idx = 0;
	cur = tbl->nodes;
	tbl->q[idx] = cur;
	while (cur && ft_strcmp(cur->name, tbl->end->name))
	{
		add_to_queue(tbl, cur);
		cur = tbl->q[++idx];
		ft_putstr("Room = ");
		if (cur)
		{
			ft_putstr(cur->name);
			ft_putstr("\n");
		}
	}
	ft_putstr("here is a node ");
	ft_putstr(cur->name);
	ft_putstr("\n");
	ft_putstr("here is end name ");
	ft_putstr(tbl->end->name);
	ft_putstr("\n");
	return (1);
}
